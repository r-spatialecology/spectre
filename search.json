[{"path":[]},{"path":"https://r-spatialecology.github.io/spectre/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://r-spatialecology.github.io/spectre/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://r-spatialecology.github.io/spectre/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://r-spatialecology.github.io/spectre/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://r-spatialecology.github.io/spectre/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://r-spatialecology.github.io/spectre/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://r-spatialecology.github.io/spectre/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://r-spatialecology.github.io/spectre/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://r-spatialecology.github.io/spectre/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://r-spatialecology.github.io/spectre/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://r-spatialecology.github.io/spectre/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://r-spatialecology.github.io/spectre/articles/getting_started_with_spectre.html","id":"general-background","dir":"Articles","previous_headings":"","what":"General background","title":"Getting started with `spectre`","text":"spectre R package easily implements advanced optimization algorithm capable predicting regional community composition fine spatial resolutions using sparse biological environmental data. algorithm underlying spectre utilizes estimates \\(\\alpha\\)-diversity (.e. species richness) \\(\\beta\\)-diversity (.e. species dissimilarity) come community composition estimates patches within target region. method used spectre adapted version presented Mokany et al. (2011).","code":""},{"path":"https://r-spatialecology.github.io/spectre/articles/getting_started_with_spectre.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting started with `spectre`","text":"Install release version CRAN: install developmental version spectre, use:","code":"install.packages(\"spectre\") install.packages(\"devtools\") devtools::install_github(\"r-spatialecology/spectre\")"},{"path":"https://r-spatialecology.github.io/spectre/articles/getting_started_with_spectre.html","id":"use-case-example","dir":"Articles","previous_headings":"","what":"Use case example","title":"Getting started with `spectre`","text":"example acts minimal working case uses simple “simulated” data matching structure needed relevant functions. simple example used minimize time data storage requirements needed run vignette.","code":"library(spectre)"},{"path":"https://r-spatialecology.github.io/spectre/articles/getting_started_with_spectre.html","id":"generating-input-data","dir":"Articles","previous_headings":"Use case example","what":"Generating input data","title":"Getting started with `spectre`","text":"first step using spectre package gather estimates \\(\\alpha\\)-biodiversity \\(\\beta\\)-biodiversity (form Bray-Curtis dissimilarity) area interest desired outcome resolution. example, created random species composition (15 sites, gamma diversity = 20) calculated ) \\(\\alpha\\)-diversity estimate ii) Bray-Curtis dissimilarity estimate output format gdm package (Fitzpatrick et al. 2021). used input spectre algorithm, please see R/generate_minimal_example_data.R details.","code":"# load \"observed\" alpha-, beta- and gamma-diversity values of the random species composition alpha_list <- minimal_example_data$alpha_list # richness beta_list <- minimal_example_data$beta_list # Bray-Curtis dissimilarity total_gamma <- dim(minimal_example_data$species_list)[1] # 20 species"},{"path":"https://r-spatialecology.github.io/spectre/articles/getting_started_with_spectre.html","id":"running-the-optimization","dir":"Articles","previous_headings":"Use case example","what":"Running the optimization","title":"Getting started with `spectre`","text":"use input estimates (\\(\\alpha\\)-diversity Bray-Curtis dissimilarity) generate commonness matrix (.e. species common site site pair) using generate_commonness_matrix_from_gdm() function. commonness matrix acts objective function (.e. target) optimization algorithm. input estimates objective function obtained optimization algorithm straightforward spectre, requiring one function call. Note though run time function may high especially large landscapes high species diversity max_iterations high.","code":"# Calculate objective_matrix from (modelled) alpha-diversity and Bray-Curtis dissimilarity  objective_matrix <- spectre::generate_commonness_matrix_from_gdm(   gdm_predictions = beta_list,    alpha_list = alpha_list) res <- spectre::run_optimization_min_conf(   alpha_list = alpha_list,   total_gamma = total_gamma,   target = objective_matrix,   max_iterations = 1000) # n iterations #>  #>  > Optimization finished with lowest absolute error = 9 (highest absolute error was: 102 improved by: 93)"},{"path":"https://r-spatialecology.github.io/spectre/articles/getting_started_with_spectre.html","id":"result-analysis","dir":"Articles","previous_headings":"Use case example","what":"Result analysis","title":"Getting started with `spectre`","text":"spectre incorporates functions allow easy calculation certain error metrics, namely mean absolute commonness error (\\(MAE_c\\)) relative commonness error (\\(\\% RCE\\)). \\(MAE_c\\) mean absolute difference solved solution matrix objective function, whereas \\(\\% RCE\\) \\(MAE_c\\) absolute commonness objective function represented percentage. objective function mean commonness 1.75. mean absolute error objective function solved solution matrix 0.09. solution matrix relative commonness error (RCE) 4.9%. results can visualized two ways using functions built package. First, one can plot error solved solution matrix time. Second, commonness error final solved solution matrix objective function patch can plotted","code":"error_c <- spectre::calc_commonness_error(x = res, objective_matrix = objective_matrix) # With an increasing number of iterations, the solution matrix improved spectre::plot_error(x = res) # Plot commonness error between objective function and solution matrix spectre::plot_commonness(x = res, target = objective_matrix)"},{"path":"https://r-spatialecology.github.io/spectre/articles/getting_started_with_spectre.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Getting started with `spectre`","text":"Fitzpatrick, M.C., Mokany, K., Manion, G., Lisk, M., Ferrier, S., Nieto-Lugilde, D., 2021. gdm: Generalized Dissimilarity Modeling. R package version 1.4.2.2. https://CRAN.R-project.org/package=gdm Mokany, K., Harwood, T.D., Overton, J.M.C., Barker, G.M., Ferrier, S., 2011. Combining α - β -diversity models fill gaps knowledge biodiversity: Filling gaps biodiversity knowledge. Ecology Letters 14, 1043–1051. https://doi.org/10.1111/j.1461-0248.2011.01675.x","code":""},{"path":[]},{"path":"https://r-spatialecology.github.io/spectre/articles/minimal_example.html","id":"installation","dir":"Articles","previous_headings":"Getting started","what":"Installation","title":"Minimal example","text":"Install release version CRAN: install developmental version spectre, use:","code":"install.packages(\"spectre\") install.packages(\"devtools\") devtools::install_github(\"r-spatialecology/spectre\")"},{"path":"https://r-spatialecology.github.io/spectre/articles/minimal_example.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Minimal example","text":"example, created random species composition (15 sites, gamma diversity = 20) calculated \\(\\alpha\\)-diversity Bray-Curtis dissimilarity used input spectre algorithm (please see R/generate_minimal_example_data.R details).","code":"library(\"spectre\") # load \"observed\" alpha-, beta- and gamma-diversity values of the random species composition alpha_list <- minimal_example_data$alpha_list # richness beta_list <- minimal_example_data$beta_list # Bray-Curtis dissimilarity total_gamma <- dim(minimal_example_data$species_list)[1] # 20 species"},{"path":"https://r-spatialecology.github.io/spectre/articles/minimal_example.html","id":"solve-species-composition-using-spectre","dir":"Articles","previous_headings":"Example","what":"Solve species composition using spectre","title":"Minimal example","text":"Running optimization straightforward spectre includes one function call. However, first need generate commonness matrix gdm predictions generate object matrix. , simply run optimization using alpha list, \\(gamma\\)-diversity, objective matrix (target), finally number maximum iterations.","code":"library(\"spectre\")  objective_matrix <- spectre::generate_commonness_matrix_from_gdm(gdm_predictions = beta_list,                                                                   alpha_list = alpha_list)  # Solve composition  res <- spectre::run_optimization_min_conf(alpha_list = alpha_list,                                           total_gamma = total_gamma,                                           target = objective_matrix,                                           max_iterations = 1000, # n iterations                                           seed = 123) # use a random seed for reproducibility #>  #>  > Optimization finished with lowest absolute error = 11 (highest absolute error was: 102 improved by: 91)"},{"path":"https://r-spatialecology.github.io/spectre/articles/minimal_example.html","id":"result-evaluation","dir":"Articles","previous_headings":"Example","what":"Result evaluation","title":"Minimal example","text":"spectre allows easily calculate error measures, namely mean absolute commonness error (\\(MAE_c\\)) relative commonness error [%] (RCE). error calculated solved species composition objective matrix. objective matrix mean commonness 1.75. mean absolute error objective matrix solved solution matrix 0.1. solution matrix relative commonness error (RCE) 6 %. also two functions visualize optimization. First can plot error solution matrix time. Second, can plot commonness error solution matrix objective matrix.","code":"error_c <- spectre::calc_commonness_error(x = res, objective_matrix = objective_matrix) # With an increasing number of iterations, the solution matrix improved spectre::plot_error(x = res) # Plot commonness error between objective matrix and solution matrix spectre::plot_commonness(x = res, target = objective_matrix)"},{"path":"https://r-spatialecology.github.io/spectre/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Craig Simpkins. Author, maintainer. Sebastian Hanss. Author. Maximilian Hesselbarth. Author. Matthias Spangenberg. Author. Jan Salecker. Author.","code":""},{"path":"https://r-spatialecology.github.io/spectre/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Simpkins C, Hanss S, Hesselbarth M, Spangenberg M, Salecker J (2021). spectre: Predict Regional Community Composition. R package version 1.0.3, https://github.com/r-spatialecology/spectre/.","code":"@Manual{,   title = {spectre: Predict Regional Community Composition},   author = {Craig Simpkins and Sebastian Hanss and Maximilian Hesselbarth and Matthias Spangenberg and Jan Salecker},   year = {2021},   note = {R package version 1.0.3},   url = {https://github.com/r-spatialecology/spectre/}, }"},{"path":"https://r-spatialecology.github.io/spectre/index.html","id":"spectre","dir":"","previous_headings":"","what":"Predict Regional Community Composition ","title":"Predict Regional Community Composition ","text":"goal spectre provide open source tool capable predicting regional community composition fine spatial resolutions using sparse biological environmental data.","code":""},{"path":"https://r-spatialecology.github.io/spectre/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Predict Regional Community Composition ","text":"Install release version CRAN: install developmental version spectre, use: full use case example included “Getting started spectre” vignette associated package.","code":"install.packages(\"spectre\") install.packages(\"remotes\") remotes::install_github(\"r-spatialecology/spectre\")"},{"path":"https://r-spatialecology.github.io/spectre/index.html","id":"meta","dir":"","previous_headings":"","what":"Meta","title":"Predict Regional Community Composition ","text":"Please report issues bugs. Get citation information spectre R citation(package = 'spectre')","code":""},{"path":"https://r-spatialecology.github.io/spectre/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Predict Regional Community Composition ","text":"Please note spectre project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/alpha_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Matrix of predicted alpha diversity in each cell. — alpha_list","title":"Matrix of predicted alpha diversity in each cell. — alpha_list","text":"Matrix predicted alpha diversity cell.","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/alpha_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matrix of predicted alpha diversity in each cell. — alpha_list","text":"","code":"alpha_list"},{"path":"https://r-spatialecology.github.io/spectre/reference/alpha_list.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Matrix of predicted alpha diversity in each cell. — alpha_list","text":"vector.","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/calc_commonness_error.html","id":null,"dir":"Reference","previous_headings":"","what":"calc_commonness_error — calc_commonness_error","title":"calc_commonness_error — calc_commonness_error","text":"Calculate commonness error","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/calc_commonness_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calc_commonness_error — calc_commonness_error","text":"","code":"calc_commonness_error(x, objective_matrix)"},{"path":"https://r-spatialecology.github.io/spectre/reference/calc_commonness_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calc_commonness_error — calc_commonness_error","text":"x Results object run_optimization_min_conf. objective_matrix Matrix (modeled) alpha-diversity Bray-Curtis dissimilarity","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/calc_commonness_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calc_commonness_error — calc_commonness_error","text":"vector","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/calc_commonness_error.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"calc_commonness_error — calc_commonness_error","text":"Calculate mean absolute commonness error (MAE_c) relative commonness error percentage (RCE).","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/estimated_gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Total (estimated) species in the system. — estimated_gamma","title":"Total (estimated) species in the system. — estimated_gamma","text":"Total (estimated) species system.","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/estimated_gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Total (estimated) species in the system. — estimated_gamma","text":"","code":"estimated_gamma"},{"path":"https://r-spatialecology.github.io/spectre/reference/estimated_gamma.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Total (estimated) species in the system. — estimated_gamma","text":"numeric","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/generate_commonness_matrix_from_gdm.html","id":null,"dir":"Reference","previous_headings":"","what":"generate_commonness_matrix_from_gdm — generate_commonness_matrix_from_gdm","title":"generate_commonness_matrix_from_gdm — generate_commonness_matrix_from_gdm","text":"Creates pairwise site site commonness matrix estimates species richness Bray-Curtis dissimilarity.","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/generate_commonness_matrix_from_gdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate_commonness_matrix_from_gdm — generate_commonness_matrix_from_gdm","text":"","code":"generate_commonness_matrix_from_gdm(gdm_predictions, alpha_list)"},{"path":"https://r-spatialecology.github.io/spectre/reference/generate_commonness_matrix_from_gdm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate_commonness_matrix_from_gdm — generate_commonness_matrix_from_gdm","text":"gdm_predictions square pairwise matrix Bray-Curtis dissimilarity estimates site pairs. recommend using gdm-package (Fitzpatrick et al. 2020) generate matrix alpha_list vector species richness every site study area. length vector must equivalent one dimensions gdm_predictions","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/generate_commonness_matrix_from_gdm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generate_commonness_matrix_from_gdm — generate_commonness_matrix_from_gdm","text":"pairwise site site matrix number species common site pair, dimensions equal provided dissimilarity matrix.","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/generate_commonness_matrix_from_gdm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"generate_commonness_matrix_from_gdm — generate_commonness_matrix_from_gdm","text":"generate_commonness_matrix_from_gdm uses vector estimated species richness per site pairwise matrix site site Bray-Curtis dissimilarity (recommend using gdm-package (Fitzpatrick et al. 2020) generate matrix) produce matrix estimated species common site pairs (referred commonness matrix). commonness sites  calculated using $$C_{ij}=(1-\\beta_{ij})(S_{} + S_{j})/2$$ \\(\\beta_{ij}\\) dissimilarity sites, \\(C_{ij}\\) species common sites, S number species site. details see Mokany et al 2011.","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/generate_commonness_matrix_from_gdm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"generate_commonness_matrix_from_gdm — generate_commonness_matrix_from_gdm","text":"Mokany, K., Harwood, T.D., Overton, J.M., Barker, G.M., & Ferrier, S. (2011). Combining \\(\\alpha\\) \\(\\beta\\) diversity models fill gaps knowledge biodiversity. Ecology Letters, 14(10), 1043-1051.","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/minimal_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"List with example data created using the gdm package — minimal_example_data","title":"List with example data created using the gdm package — minimal_example_data","text":"List example data created using gdm package","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/minimal_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List with example data created using the gdm package — minimal_example_data","text":"","code":"minimal_example_data"},{"path":"https://r-spatialecology.github.io/spectre/reference/minimal_example_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List with example data created using the gdm package — minimal_example_data","text":"list","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/plot_commonness.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_commonness — plot_commonness","title":"plot_commonness — plot_commonness","text":"Plot commonness observed optimized data","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/plot_commonness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_commonness — plot_commonness","text":"","code":"plot_commonness(x, target)"},{"path":"https://r-spatialecology.github.io/spectre/reference/plot_commonness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_commonness — plot_commonness","text":"x Results object run_optimization_min_conf() target Pairwise matrix species common.","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/plot_commonness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_commonness — plot_commonness","text":"ggplot","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/plot_commonness.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plot_commonness — plot_commonness","text":"Plot heatmap commonness observed data optimized data. visual style allows easier spatial understanding commonness differences ascertained.","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/plot_error.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_error — plot_error","title":"plot_error — plot_error","text":"Plot absolute error","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/plot_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_error — plot_error","text":"","code":"plot_error(x)"},{"path":"https://r-spatialecology.github.io/spectre/reference/plot_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_error — plot_error","text":"x Results object run_optimization_min_conf","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/plot_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_error — plot_error","text":"ggplot","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/plot_error.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plot_error — plot_error","text":"Plot error time","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/plot_error.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"plot_error — plot_error","text":"xxx","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/print.optim_sol.html","id":null,"dir":"Reference","previous_headings":"","what":"print.optim_sol — print.optim_sol","title":"print.optim_sol — print.optim_sol","text":"Print method optim_sol object","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/print.optim_sol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print.optim_sol — print.optim_sol","text":"","code":"# S3 method for optim_sol print(x, ...)"},{"path":"https://r-spatialecology.github.io/spectre/reference/print.optim_sol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print.optim_sol — print.optim_sol","text":"x optim_sol object randomized patterns. ... Arguments passed cat.","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/print.optim_sol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print.optim_sol — print.optim_sol","text":"void","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/print.optim_sol.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"print.optim_sol — print.optim_sol","text":"Printing method optimized estimate community composition.","code":""},{"path":[]},{"path":"https://r-spatialecology.github.io/spectre/reference/run_optimization_min_conf.html","id":null,"dir":"Reference","previous_headings":"","what":"run_optimization_min_conf — run_optimization_min_conf","title":"run_optimization_min_conf — run_optimization_min_conf","text":"Generate optimized estimate community composition (species presences absences) every site study area.","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/run_optimization_min_conf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run_optimization_min_conf — run_optimization_min_conf","text":"","code":"run_optimization_min_conf(   alpha_list,   total_gamma,   target,   max_iterations,   partial_solution = NULL,   fixed_species = NULL,   autostop = 0,   seed = NA,   verbose = TRUE,   interruptible = TRUE )"},{"path":"https://r-spatialecology.github.io/spectre/reference/run_optimization_min_conf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run_optimization_min_conf — run_optimization_min_conf","text":"alpha_list Matrix predicted alpha diversity (species richness) cell. total_gamma Total number species present throughout entire landscape. target Pairwise matrix species common site site pair. upper triangle matrix actually needed. max_iterations maximum number iterations optimization algorithm may run stopping. partial_solution Can either result previous optimization run (see value) (initial) matrix species presences absences site landscape. total number presences must match estimated species richness site. result previous optimization used, optimized_grid used initial matrix error data frame extended new iterations. fixed_species Fixed partial solution species considered given. species going changed optimization. autostop optimizer stop number iterations improvement. Default: 0 meand auto stop disabled. seed Seed random number generator. Seed must positive integer value. seed = NA means random integer used seed. verbose TRUE (default), progress report printed optimization run. interruptible Allow run interrupted completion. FALSE increases performance.#'","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/run_optimization_min_conf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"run_optimization_min_conf — run_optimization_min_conf","text":"species presence/absence matrix study landscape.","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/run_optimization_min_conf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"run_optimization_min_conf — run_optimization_min_conf","text":"run_optimization_min_conf core function spectre package. underlying algorithm function adapted Mokany et al. (2011). pairwise commonness matrix (structure target matrix) calculated partial_solution matrix value difference target determined. difference present depending set stopping criteria algorithm continues. random site presence/absence matrix selected, random presence record site replaced absence. Every absence selected site individually flipped presence value difference objective recorded. presence record resulted lowest value difference (minimum conflict) retained. cycle continues, random site selected every iteration, pairwise commonness objective matrices match algorithm runs beyond max_iterations.","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/run_optimization_min_conf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"run_optimization_min_conf — run_optimization_min_conf","text":"Mokany, K., Harwood, T.D., Overton, J.M., Barker, G.M., & Ferrier, S. (2011). Combining \\(\\alpha\\) \\(\\beta\\) diversity models fill gaps knowledge biodiversity. Ecology Letters, 14(10), 1043-1051.","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/spectre.html","id":null,"dir":"Reference","previous_headings":"","what":"spectre — spectre","title":"spectre — spectre","text":"goal spectre provide open source tool capable predicting regional community composition fine spatial resolutions using sparse biological environmental data.","code":""},{"path":[]},{"path":"https://r-spatialecology.github.io/spectre/reference/spectre.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"spectre — spectre","text":"Maintainer: Craig Simpkins simpkinscraig063@gmail.com Authors: Sebastian Hanss Maximilian Hesselbarth Matthias Spangenberg Jan Salecker","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/target_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Pairwise matrix of species in common. — target_matrix","title":"Pairwise matrix of species in common. — target_matrix","text":"Pairwise matrix species common.","code":""},{"path":"https://r-spatialecology.github.io/spectre/reference/target_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pairwise matrix of species in common. — target_matrix","text":"","code":"target_matrix"},{"path":"https://r-spatialecology.github.io/spectre/reference/target_matrix.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pairwise matrix of species in common. — target_matrix","text":"matrix","code":""},{"path":"https://r-spatialecology.github.io/spectre/news/index.html","id":"spectre-103","dir":"Changelog","previous_headings":"","what":"spectre 1.0.3","title":"spectre 1.0.3","text":"Adding printing function S3 class","code":""},{"path":"https://r-spatialecology.github.io/spectre/news/index.html","id":"spectre-102","dir":"Changelog","previous_headings":"","what":"spectre 1.0.2","title":"spectre 1.0.2","text":"CRAN release: 2021-07-17 Minor bug fixes related Cpp testthat functions ensuring CRAN build checks work","code":""},{"path":"https://r-spatialecology.github.io/spectre/news/index.html","id":"spectre-101","dir":"Changelog","previous_headings":"","what":"spectre 1.0.1","title":"spectre 1.0.1","text":"number minor bug fixes aimed ensuring CRAN build checks systems work","code":""},{"path":"https://r-spatialecology.github.io/spectre/news/index.html","id":"spectre-10","dir":"Changelog","previous_headings":"","what":"spectre 1.0","title":"spectre 1.0","text":"First submission CRAN","code":""}]
