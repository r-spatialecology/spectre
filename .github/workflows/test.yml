# This is a basic workflow to help you get started with Actions

name: test

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches: 
      - master
      - dev

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  unittests:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    strategy:
      fail-fast: false
      matrix:
        config:
        #  - {os: windows-latest, r: 'release'}
        #  - {os: macOS-latest, r: 'release'}
          - {os: ubuntu-latest, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/bionic/latest"}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - uses: r-lib/actions/setup-r@master
      with:
        r-version: ${{ matrix.config.r }}
    - name: Query dependencies
      run: |
        install.packages("remotes")
        saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
      shell: Rscript {0}
    - name: Cache R packages
      if: runner.os != 'Windows'
      uses: actions/cache@v1
      with:
       path: ${{ env.R_LIBS_USER }}
       key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
       restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-
    - name: Install system dependencies
      if: runner.os == 'Linux'
      env:
        RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
      run: |
        sudo apt install -y libgit2-dev
        Rscript -e "remotes::install_github('r-hub/sysreqs')"
        Rscript -e "install.packages('dplyr')"
        sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
        sudo -s eval "$sysreqs"
    - name: Install dependencies
      run: |
        remotes::install_deps(dependencies = TRUE)
      shell: Rscript {0}
    # Runs a set of commands using the runners shell
    - name: Test spectre
      run: |
        Rscript -e 'if (any(as.data.frame(devtools::test())[["failed"]] > 0)) stop("Some tests failed.")'
        Rscript -e 'covr::codecov()'
