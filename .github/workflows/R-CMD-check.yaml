name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: setup_runners
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: macOS-latest, r: 'release'}
          - {os: ubuntu-latest, r: 'release'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}

    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}
      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          devtools::install(upgrade = FALSE)
        shell: Rscript {0}

      - name: Build
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: devtools::build(binary = TRUE)
        shell: Rscript {0}
        
      - name: Document
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: devtools::document()
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: if (!identical(devtools::check(cran = FALSE, document = FALSE, args = "--no-tests")[["errors"]], character(0))) stop("Check with Errors")
        shell: Rscript {0}
        
      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: if (!identical(devtools::check(cran = FALSE, document = FALSE, args = "--no-tests")[["warnings"]], character(0))) stop("Check with Warnings")
        shell: Rscript {0}
        
      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: if (!identical(devtools::check(cran = FALSE, document = FALSE, args = "--no-tests")[["notes"]], character(0))) stop("Check with Notes")
        shell: Rscript {0}

      - name: Test
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: if (any(as.data.frame(devtools::test())[["failed"]] > 0)) stop("Some tests failed.")
        shell: Rscript {0}        

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
